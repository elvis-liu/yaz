apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'

version = '0.11'
group = 'com.exmertec.yaz'
archivesBaseName = "yaz"

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

ext.getPropertyIfExists = { propertyName ->
    if (project(":").hasProperty(propertyName)) {
        return project(":").property(propertyName);
    } else {
        return null;
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: getPropertyIfExists("ossrhUsername"), password: getPropertyIfExists("ossrhPassword"))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: getPropertyIfExists("ossrhUsername"), password: getPropertyIfExists("ossrhPassword"))
            }

            pom.project {
                name 'yaz'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Yet Another Zeratul is an upgraded version of Zeratul, which is a Java library wraps the JPA interfaces, to provide more convenient data accessing.'
                url 'https://github.com/elvis-liu/yaz'

                scm {
                    connection 'scm:git:https://github.com/elvis-liu/yaz.git'
                    developerConnection 'scm:git:https://github.com/elvis-liu/yaz.git'
                    url 'https://github.com/elvis-liu/yaz.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'elvis-liu'
                        name 'Yufeng Liu'
                        email 'elvisliu.cs@gmail.com'
                    }
                    developer {
                        id 'yeyuexia'
                        name 'Zhuo Liu'
                        email 'yyxworld@gmail.com'
                    }
                }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'utf-8'
}

repositories {
    mavenCentral()
}

idea {
    project {
        languageLevel = "1.8"
        jdkName = "1.8"

        ipr {
            withXml { provider ->
                provider.node.component
                        .find { it.@name == 'VcsDirectoryMappings' }
                        .mapping.@vcs = 'Git'
            }
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'yaz',
                'Implementation-Version': version
    }
}

dependencies {
    testCompile(
            [group: 'junit', name: 'junit', version: '4.11'],
            [group: 'org.assertj', name: 'assertj-core', version: '3.0.0'],
            [group: 'com.h2database', name: 'h2', version: '1.4.187'],
            [group: 'org.springframework', name: 'spring-orm', version: '4.1.6.RELEASE'],
            [group: 'org.springframework', name: 'spring-context-support', version: '4.1.6.RELEASE'],
            [group: 'org.hibernate', name: 'hibernate-entitymanager', version: '4.3.9.Final']
    )

    testCompile(group: 'org.springframework', name: 'spring-test', version: '4.1.6.RELEASE') {
        exclude module: 'junit'
    }

    compile(
            [group: 'log4j', name: 'log4j', version: '1.2.17'],
            //Hibernate
            [group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'],
    )
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

findbugs {
    excludeFilter = new File(project(":").projectDir, "config/findbugs/excludeBugsFilter.xml")
}

checkstyle {
    toolVersion = "6.7"
    configFile = new File(project(":").projectDir, "config/checkstyle/checkstyle.xml")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
